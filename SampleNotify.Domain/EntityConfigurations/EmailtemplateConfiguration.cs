// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

namespace SampleNotify.Models
{
    public class EmailtemplateConfiguration : IEntityTypeConfiguration<Emailtemplate>
    {
        public void Configure(EntityTypeBuilder<Emailtemplate> entity)
        {
            entity.ToTable("EMAILTEMPLATE");

            entity.Property(e => e.Id)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Guid.NewGuid().ToString()");

            entity.Property(e => e.Active)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasComment("Kích hoạt");

            entity.Property(e => e.AppId)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("Mã App (VD: ichiba-portal-web)");

            entity.Property(e => e.AppNotifyConfigCode)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("Mã thông báo của App (VD: NotifyConfigCodes.Orders.Transport.OrderPlaced)");

            entity.Property(e => e.BccEmailAddresses)
                .HasMaxLength(1000)
                .HasComment("Bcc");

            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(450)
                .HasComment("Id SSO người tạo");

            entity.Property(e => e.CreatedByUserName)
                .IsRequired()
                .HasMaxLength(256)
                .HasComment("UserName SSO người tạo");

            entity.Property(e => e.CreatedOnUtc)
                .HasColumnType("datetime")
                .HasComment("Ngày giờ tạo");

            entity.Property(e => e.DelayBeforeSend).HasComment("Delay thời gian gửi");

            entity.Property(e => e.Description)
                .HasMaxLength(4000)
                .HasComment("Mô tả");

            entity.Property(e => e.DisplayOrder)
                .HasDefaultValueSql("((9999))")
                .HasComment("Thứ tự hiển thị");

            entity.Property(e => e.GroupType).HasComment("Nhóm cấu hình (Enum: NotifyConfigGroup)");

            entity.Property(e => e.HasAttachments).HasComment("Có tệp đính kèm");

            entity.Property(e => e.HtmlBody).HasComment("Nội dung Html");

            entity.Property(e => e.LanguageCulture)
                .HasMaxLength(50)
                .HasComment("Mã ngôn ngữ (VD: vi-VN, en-US)");

            entity.Property(e => e.MessageDelayPeriod).HasComment("Đơn vị thời gian delay (Enum: MessageDelayPeriod - 0: giờ; 1: ngày)");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("Tên Template");

            entity.Property(e => e.Priority).HasComment("Độ ưu tiên (Enum: NotifyPriority)");

            entity.Property(e => e.Subject)
                .IsRequired()
                .HasMaxLength(255)
                .HasComment("Tiêu đề");

            entity.Property(e => e.TextBody).HasComment("Nội dung Text");

            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(450)
                .HasComment("Id SSO người sửa");

            entity.Property(e => e.UpdatedByUserName)
                .HasMaxLength(256)
                .HasComment("UserName SSO người sửa");

            entity.Property(e => e.UpdatedOnUtc)
                .HasColumnType("datetime")
                .HasComment("Ngày giờ sửa");
        }
    }
}
