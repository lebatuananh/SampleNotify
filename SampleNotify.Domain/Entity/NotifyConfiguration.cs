// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

namespace SampleNotify.Models
{
    public class NotifyConfiguration : IEntityTypeConfiguration<Notify>
    {
        public void Configure(EntityTypeBuilder<Notify> entity)
        {
            entity.ToTable("NOTIFY");

            entity.Property(e => e.Id).HasColumnName("id");

            entity.Property(e => e.AppId)
                .IsRequired()
                .HasColumnName("app_id")
                .HasMaxLength(255);

            entity.Property(e => e.Badge)
                .HasColumnName("badge")
                .HasColumnType("text");

            entity.Property(e => e.Body)
                .HasColumnName("body")
                .HasColumnType("ntext");

            entity.Property(e => e.ClickAction)
                .HasColumnName("click_action")
                .HasMaxLength(255);

            entity.Property(e => e.Code)
                .HasColumnName("code")
                .HasMaxLength(255);

            entity.Property(e => e.CreatedOnUtc)
                .HasColumnName("created_on_utc")
                .HasColumnType("datetime");

            entity.Property(e => e.DontSendBeforeDateUtc)
                .HasColumnName("dont_send_before_date_utc")
                .HasColumnType("datetime");

            entity.Property(e => e.JsonData)
                .HasColumnName("json_data")
                .HasColumnType("ntext");

            entity.Property(e => e.Link)
                .HasColumnName("link")
                .HasMaxLength(255);

            entity.Property(e => e.ListTo)
                .HasColumnName("list_to")
                .HasMaxLength(255);

            entity.Property(e => e.ListToType).HasColumnName("list_to_type");

            entity.Property(e => e.ListToTypeText)
                .HasColumnName("list_to_type_text")
                .HasMaxLength(255);

            entity.Property(e => e.Priority).HasColumnName("priority");

            entity.Property(e => e.PriorityText)
                .HasColumnName("priority_text")
                .HasMaxLength(255);

            entity.Property(e => e.RefCode)
                .HasColumnName("ref_code")
                .HasMaxLength(255);

            entity.Property(e => e.RefType)
                .HasColumnName("ref_type")
                .HasMaxLength(255);

            entity.Property(e => e.RequireInteraction).HasColumnName("require_interaction");

            entity.Property(e => e.RoutingKey)
                .HasColumnName("routing_key")
                .HasMaxLength(255);

            entity.Property(e => e.SendStatus).HasColumnName("send_status");

            entity.Property(e => e.SendStatusText)
                .HasColumnName("send_status_text")
                .HasMaxLength(255);

            entity.Property(e => e.SentOnUtc)
                .HasColumnName("sent_on_utc")
                .HasColumnType("datetime");

            entity.Property(e => e.SentTries).HasColumnName("sent_tries");

            entity.Property(e => e.Sound)
                .HasColumnName("sound")
                .HasMaxLength(255);

            entity.Property(e => e.Title)
                .HasColumnName("title")
                .HasMaxLength(255);
        }
    }
}
